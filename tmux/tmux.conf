# -----------------------------------------------------
#  Author               : thomasmunduchira <Thomas Munduchira>
#  Forked from          : thebearjew/dotfiles, martin-svk/dot-files
# -----------------------------------------------------

# =====================================================
# Basic config
# =====================================================

# Unset ruby version so it respects .ruby-version files
set-environment -gu RBENV_VERSION

# Fastest command sequences (http://superuser.com/a/252717/65504)
set -s escape-time 0

# For nice colors
set -g default-terminal "screen-256color"

# XTerm compatibility
set -g xterm-keys on

# Vi keys in copy mode
set -g mode-keys vi

# History boost
set -g history-limit 50000

# Enable mouse
set -g mouse on

# Emacs key bindings in command prompt (prefix + :) are better than vi keys, even for vim users
set -g status-keys emacs

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Messages are displayed for 3 seconds
set -g display-time 3000

# =====================================================
# Key bindings and mappings
# =====================================================

# Prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Reload the file with Prefix r
bind R source-file ~/.tmux.conf \; display "Sourced tmux.conf"

# Next and prev window like in vim
# bind -r - previous-window
# bind -r = next-window

# New windows and panes in the same dir
bind n new-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -c "#{pane_current_path}"

# Pane switching
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind \ select-pane -l

# Multiply resize pane values
bind < resize-pane -L 10
bind - resize-pane -D 10
bind + resize-pane -U 10
bind > resize-pane -R 10

# <prefix> r to rename window
bind r command-prompt 'rename-window %%'

# =====================================================
# Copy mode settings
# =====================================================

# Set VIM keybindings for copy mode by default
set -g mode-keys vi

bind -T copy-mode-vi v send -X begin-selection

# tmux-yank settings
set -g @yank_action 'copy-pipe'

# <prefix> p to paste buffer
unbind p
bind p paste-buffer

# <prefix> P to choose which buffer to paste
bind P choose-buffer

# =====================================================
# Status bar settings
# =====================================================

# Set status position
set -g status-position bottom

# Set the base index for windows and panes to 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# Renumber when window is closed
set -g renumber-windows on

# Activity monitoring
setw -g monitor-activity on

# Default statusbar colors
set -g status-bg black
set -g status-fg green
set -g status-attr default

# Default window title colors
setw -g window-status-fg white
setw -g window-status-bg black

# Active window title colors
setw -g window-status-current-fg yellow
setw -g window-status-current-bg default
setw -g window-status-current-attr dim

# Pane border
set -g pane-border-fg black
set -g pane-border-bg default
set -g pane-active-border-fg magenta
set -g pane-active-border-bg default

# Command line/message text
set -g message-bg black
set -g message-fg yellow

# Pane number display
set -g display-panes-active-colour cyan
set -g display-panes-colour brightblue

# Status settings
set -g status on
set -g status-interval 15
set -g status-justify centre

# Status line left side
set -g status-left-length 70
set -g @online_icon "yes"
set -g @offline_icon "no"
set -g status-left "#[fg=blue] Session: #S | Machine: #H | Online: #{online_status}"

# Status line right side
set -g status-right-length 70
set -g status-right "#[fg=blue] Time: %d %b %R"

# Activity
set -gw window-status-activity-attr dim
set -gw window-status-activity-bg black
set -gw window-status-activity-fg cyan

# Status line right side
set -g status-right-length 70
set -g status-right "#[fg=blue]Battery: #{battery_percentage} | Time: %d %b %R "

# =====================================================
# Plugins settings
# =====================================================

# List of plugins

# Tmux plugin manager is loaded when the tmux config is loaded
set -g @plugin 'tmux-plugins/tpm'

# Used to integrate macOS clipboard with tmux
set -g @plugin 'tmux-plugins/tmux-yank' # yanking helpers

# Used to manage and create new sessions from within tmux!
#
# prefix + g                    - prompts for session name and switches to it. Performs 'kind-of' name completion. Faster than the built-in prefix + s prompt for long session lists.
# prefix + C (shift + c)        - prompt for creating a new session by name.
# prefix + X (shift + x)        - kill current session without detaching tmux.
# prefix + S (shift + s)        - switches to the last session. The same as built-in prefix + L that everyone seems to override with some other binding.
# prefix + @                    - promote current pane into a new session. Analogous to how prefix + ! breaks current pane to a new window.
set -g @plugin 'tmux-plugins/tmux-sessionist' # session helpers prexif + C (new session)

# Used for saving tmux session information (including neovim) between computer restarts
#
# prefix + Ctrl-s - save
# prefix + Ctrl-r - restore
set -g @plugin 'tmux-plugins/tmux-resurrect' # prefix + C-s save, C-r restore
# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'

# Used for displaying the current system battery status
set -g @plugin 'tmux-plugins/tmux-battery' # Batter percentage

# Used for displaying the current system network status
set -g @plugin 'tmux-plugins/tmux-online-status' # Online status

# Seamless navigation between vim and tmux splits
set -g @plugin 'christoomey/vim-tmux-navigator'

# Initialize plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# This is to reattach the the tmux sesison to the macOS namespace for commands like `open`
# if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf'

# Do not auto-name panes. Might fix an issue where tmux-resurrect is not saving the name of the first window
set -g allow-rename off
setw -g automatic-rename off

